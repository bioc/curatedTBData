% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_mean_auc.R
\name{get_mean_auc}
\alias{get_mean_auc}
\title{Compute mean AUC value and bootstrapped confidence interval
  for multiple signature's mean AUC across studies}
\usage{
get_mean_auc(
  df,
  column_name_variable,
  column_name_value,
  method = c("percentile", "empirical"),
  num.boot = 100,
  percent = 0.95
)
}
\arguments{
\item{df}{A data frame/matrix contains the interested numeric vector obtained
from \code{\link[curatedTBData]{combine_auc}}.}

\item{column_name_variable}{A character string specifying the column name of
the signatures.}

\item{column_name_value}{A character string specifying the column name of the
value for bootstrapping.}

\item{method}{A character string specifying the method used for
computing bootstrap confidence interval.
The choices are \code{c("percentile","empirical")}.
The default is \code{"empirical"}.}

\item{num.boot}{Numeric. Number of bootstrap times.
Default value is \code{100}.}

\item{percent}{A number indicates the percentage of confidence interval
Default is value \code{0.95}.}
}
\value{
A \code{data.frame} contains mean AUC,
  lower and upper bootstrap confidence interval
  for each gene signature across multiple studies.
}
\description{
Compute mean AUC value and bootstrapped confidence interval
  for multiple signature's mean AUC across studies
}
\examples{
returned_resources <- curatedTBData(c("GSE107104", "GSE19435"),
                                    dry.run = FALSE, curated.only = TRUE)
TBsignaturesSub <- TBSignatureProfiler::TBsignatures[1:5]
re1 <- lapply(returned_resources, function(x)
                   subset_curatedTBData(x, "TBStatus", c("Control","PTB")))
re2 <- lapply(re1, function(x)
         TBSignatureProfiler::runTBsigProfiler(input = x,
                                               useAssay = 1,
                                               signatures = TBsignaturesSub,
                                               algorithm = "ssGSEA",
                                               update_genes = FALSE))
df <- combine_auc(re2, annotationColName = "TBStatus",
                  signatureColNames = names(TBsignaturesSub),
                  num.boot = 100, percent = 0.95)
get_mean_auc(df, column_name_variable = "Signature",
             column_name_value = "AUC", method = "percentile",
             num.boot = 100, percent = 0.95)
}
